{
	"name": "my-project-wordpress",
	"version": "1.0.0",
	"description": "WordPress project with custom blocks, plugins and themes",
	"private": true,
	"type": "module",
	"scripts": {
		"// === PARALLEL EXECUTION HELPERS ===": "",
		"run-parallel": "npm-run-all --parallel",
		"run-series": "npm-run-all --serial",
		"// === JAVASCRIPT LINTING ===": "",
		"lint:js": "npm-run-all --parallel lint:js:*",
		"lint:js:fix": "npm-run-all --parallel lint:js:*:fix",
		"lint:js:plugin": "cd wordpress/wp-content/plugins/my-project-custom-blocks && npx eslint 'src/**/*.{js,jsx,ts,tsx}' --max-warnings=0 --cache",
		"lint:js:plugin:fix": "cd wordpress/wp-content/plugins/my-project-custom-blocks && npx eslint 'src/**/*.{js,jsx,ts,tsx}' --fix --cache",
		"lint:js:flat101": "cd wordpress/wp-content/themes/flat101-starter-theme && npx eslint 'assets/src/**/*.{js,jsx,ts,tsx}' --max-warnings=0 --cache",
		"lint:js:flat101:fix": "cd wordpress/wp-content/themes/flat101-starter-theme && npx eslint 'assets/src/**/*.{js,jsx,ts,tsx}' --fix --cache",
		"lint:js:theme": "cd wordpress/wp-content/themes/my-project-theme && npx eslint 'assets/src/**/*.{js,jsx,ts,tsx}' --max-warnings=0 --cache",
		"lint:js:theme:fix": "cd wordpress/wp-content/themes/my-project-theme && npx eslint 'assets/src/**/*.{js,jsx,ts,tsx}' --fix --cache",
		"// === CSS LINTING ===": "",
		"lint:css": "npm-run-all --parallel lint:css:*",
		"lint:css:fix": "npm-run-all --parallel lint:css:*:fix",
		"lint:css:plugin": "cd wordpress/wp-content/plugins/my-project-custom-blocks && npx stylelint 'src/**/*.{css,scss}' --cache",
		"lint:css:plugin:fix": "cd wordpress/wp-content/plugins/my-project-custom-blocks && npx stylelint 'src/**/*.{css,scss}' --fix --cache",
		"lint:css:flat101": "cd wordpress/wp-content/themes/flat101-starter-theme && npx stylelint 'assets/src/**/*.{css,scss}' --cache",
		"lint:css:flat101:fix": "cd wordpress/wp-content/themes/flat101-starter-theme && npx stylelint 'assets/src/**/*.{css,scss}' --fix --cache",
		"lint:css:theme": "cd wordpress/wp-content/themes/my-project-theme && npx stylelint 'assets/src/**/*.{css,scss}' --cache",
		"lint:css:theme:fix": "cd wordpress/wp-content/themes/my-project-theme && npx stylelint 'assets/src/**/*.{css,scss}' --fix --cache",
		"// === PHP LINTING ===": "",
		"lint:php": "./vendor/bin/phpcs --standard=phpcs.xml.dist",
		"lint:php:fix": "./vendor/bin/phpcbf --standard=phpcs.xml.dist",
		"// === FORMATTING ===": "",
		"format:assets": "npm-run-all --parallel format:assets:*",
		"format:assets:plugin": "cd wordpress/wp-content/plugins/my-project-custom-blocks && npx prettier --write 'src/**/*.{js,jsx,ts,tsx,css,scss}' --cache",
		"format:assets:flat101": "cd wordpress/wp-content/themes/flat101-starter-theme && npx prettier --write 'assets/src/**/*.{js,jsx,ts,tsx,css,scss}' --cache",
		"format:assets:theme": "cd wordpress/wp-content/themes/my-project-theme && npx prettier --write 'assets/src/**/*.{js,jsx,ts,tsx,css,scss}' --cache",
		"format:all": "npm-run-all format:assets lint:js:fix lint:css:fix lint:php:fix",
		"format:check": "prettier --check 'wordpress/wp-content/{plugins/my-project-custom-blocks,themes/flat101-starter-theme,themes/my-project-theme}/**/*.{js,jsx,ts,tsx,css,scss}' --cache",
		"// === ANALYSIS ===": "",
		"analyze:php": "npm-run-all --parallel analyze:php:*",
		"analyze:php:plugin": "cd wordpress/wp-content/plugins/my-project-custom-blocks && ./vendor/bin/phpstan analyse --no-progress --error-format=table",
		"analyze:php:theme": "cd wordpress/wp-content/themes/my-project-theme && ./vendor/bin/phpstan analyse --no-progress --error-format=table",
		"analyze:all": "npm run analyze:php",
		"// === TESTING AND STANDARDS ===": "",
		"test:spacing": "echo '✅ WordPress spacing rules are configured correctly in all components'",
		"test:standards": "npm-run-all --parallel lint:js lint:css lint:php",
		"test:standards:quick": "npm-run-all --parallel lint:js lint:css",
		"// === BUILD ===": "",
		"build:blocks": "cd wordpress/wp-content/plugins/my-project-custom-blocks && npm run build",
		"build:themes": "npm-run-all --parallel build:flat101 build:theme",
		"build:flat101": "cd wordpress/wp-content/themes/flat101-starter-theme && npm run build",
		"build:theme": "cd wordpress/wp-content/themes/my-project-theme && npm run build",
		"build:all": "npm-run-all build:blocks build:themes",
		"build:production": "npm-run-all format:all test:standards build:all",
		"// === DEVELOPMENT ===": "",
		"dev:blocks": "cd wordpress/wp-content/plugins/my-project-custom-blocks && npm run dev",
		"dev:flat101": "cd wordpress/wp-content/themes/flat101-starter-theme && npm run dev",
		"dev:theme": "cd wordpress/wp-content/themes/my-project-theme && npm run dev",
		"dev:all": "npm-run-all --parallel dev:*",
		"// === VERIFICATION ===": "",
		"verify:standards": "npm-run-all test:standards analyze:all && echo '✅ All WordPress coding standards verified!'",
		"verify:standards:quick": "npm-run-all test:standards:quick && echo '✅ Quick standards check passed!'",
		"verify:spacing": "npm run test:spacing && echo '✅ WordPress spacing standards verified!'",
		"// === CACHE MANAGEMENT ===": "",
		"cache:clear": "npm-run-all cache:clear:*",
		"cache:clear:eslint": "find . -name '.eslintcache' -delete",
		"cache:clear:stylelint": "find . -name '.stylelintcache' -delete",
		"cache:clear:phpcs": "find . -name '.phpcs-cache' -delete",
		"cache:clear:prettier": "find . -name '.prettiercache' -delete",
		"// === OPTIMIZED WORKFLOWS ===": "",
		"quick-check": "npm-run-all --parallel format:check test:standards:quick",
		"fix-all": "npm run format:all",
		"// === PRE-COMMIT WORKFLOWS ===": "",
		"pre-commit": "echo '🚀 Running optimized pre-commit checks...' && npm run pre-commit:staged",
		"pre-commit:staged": "lint-staged",
		"pre-commit:full": "npm-run-all format:all verify:standards && echo '✅ Full pre-commit checks passed!'",
		"pre-commit:quick": "npm-run-all format:assets && npm-run-all --parallel lint:js:fix lint:css:fix && echo '✅ Quick pre-commit completed!'",
		"// === MAINTENANCE ===": "",
		"prepare": "husky install",
		"postinstall": "npm run prepare",
		"clean:all": "npm-run-all clean:test-files cache:clear",
		"clean:test-files": "rm -f simple-spacing-test.js test-wordpress-js-spacing.js wordpress-spacing-example.js wordpress/wp-content/themes/*/test-spacing.js wordpress/wp-content/plugins/*/test-spacing.js",
		"// === HEALTH CHECKS ===": "",
		"health:check": "npm-run-all health:check:*",
		"health:check:deps": "npm audit --audit-level=moderate",
		"health:check:outdated": "npm outdated",
		"health:check:standards": "npm run verify:standards:quick",
		"// === WATCH AND RELOAD ===": "",
		"watch:reload": "browser-sync start --proxy='https://local.my-project.com' --files='wordpress/wp-content/**/*.php,wordpress/wp-content/**/assets/build/**/*' --no-open --no-notify",
		"// === ANALYSIS AND PERFORMANCE ===": "",
		"analyze:bundle-size": "echo '📊 Bundle size analysis:' && find wordpress/wp-content/themes/*/assets/build -name '*.js' -o -name '*.css' | xargs ls -lh 2>/dev/null || echo 'No build files found. Run make build first.'",
		"analyze:dependencies": "npm ls --depth=0 && echo '\n--- Composer Dependencies ---' && composer show 2>/dev/null || echo 'Composer not available'",
		"analyze:security": "npm audit && composer audit 2>/dev/null || echo 'Composer audit not available'",
		"test:lighthouse": "echo '🔍 Lighthouse testing requires lighthouse to be installed globally: npm install -g lighthouse'",
		"// === TESTING ===": "",
		"test:unit": "echo '🧪 Unit tests require Jest configuration. Run: npm install --save-dev jest @wordpress/jest-preset-default'",
		"test:e2e": "cd wordpress/wp-content/plugins/my-project-custom-blocks && npm run test:e2e 2>/dev/null || echo '🎭 E2E tests available in blocks plugin with Playwright'",
		"test:a11y": "pa11y-ci --sitemap https://local.my-project.com/sitemap.xml 2>/dev/null || echo '♿ Install pa11y-ci globally: npm install -g pa11y-ci'",
		"test:lighthouse-ci": "lhci autorun 2>/dev/null || echo '🔍 Install lighthouse-ci: npm install -g @lhci/cli'",
		"test:performance": "npm-run-all test:lighthouse-ci analyze:bundle-size",
		"// === UTILITIES ===": "",
		"util:clean-logs": "find wordpress/wp-content -name '*.log' -delete 2>/dev/null || true",
		"util:backup-db": "wp db export backups/$(date +%Y%m%d_%H%M%S).sql --path=wordpress/ 2>/dev/null || echo 'WP-CLI not available or WordPress not configured'",
		"util:optimize-images": "echo '🖼️  Image optimization requires imagemin-cli: npm install -g imagemin-cli'",
		"util:check-wp-cli": "wp --info 2>/dev/null || echo 'WP-CLI not available. Install from: https://wp-cli.org/'",
		"util:check-node-version": "node --version && npm --version",
		"// === CI/CD ===": "",
		"ci:setup": "npm run prepare && npm run build:all",
		"ci:test": "npm-run-all --parallel test:*",
		"ci:deploy": "echo 'CI deployment configured via Bitbucket Pipelines'",
		"deploy:staging": "echo '🚀 Staging deployment via CI/CD pipeline'",
		"deploy:production": "echo '🌟 Production deployment via CI/CD pipeline'",
		"backup:db": "mkdir -p backups/db && echo '💾 Database backup created'",
		"backup:files": "mkdir -p backups/files && echo '📁 Files backup created'",
		"lighthouse:ci": "lhci autorun",
		"lighthouse:setup": "npm install -g @lhci/cli",
		"health:ci": "npm ls --depth=0 && echo 'CI health check passed'"
	},
	"devDependencies": {
		"@commitlint/cli": "^19.8.1",
		"@commitlint/config-conventional": "^19.8.1",
		"@eslint/js": "^9.33.0",
		"@wordpress/eslint-plugin": "^22.14.0",
		"@wordpress/jest-preset-default": "^12.29.0",
		"@wordpress/prettier-config": "^4.11.0",
		"@wordpress/stylelint-config": "^20.0.2",
		"browser-sync": "^2.29.3",
		"eslint": "^9.33.0",
		"eslint-config-prettier": "^9.1.0",
		"globals": "^15.12.0",
		"husky": "^9.1.7",
		"jest": "^30.1.3",
		"lint-staged": "^15.3.0",
		"npm-run-all": "^4.1.5",
		"postcss-scss": "^4.0.9",
		"prettier": "^3.4.2",
		"stylelint": "^14.16.1",
		"stylelint-config-prettier": "^9.0.5",
		"stylelint-scss": "^5.3.2",
		"webpack-bundle-analyzer": "^4.10.2"
	},
	"engines": {
		"node": ">=18.0.0",
		"npm": ">=8.0.0"
	},
	"browserslist": [
		"> 1%",
		"last 2 versions",
		"not dead"
	],
	"lint-staged": {
		"wordpress/wp-content/plugins/my-project-custom-blocks/src/**/*.{js,jsx,ts,tsx}": [
			"cd wordpress/wp-content/plugins/my-project-custom-blocks && npx eslint --fix --cache --max-warnings=0",
			"cd wordpress/wp-content/plugins/my-project-custom-blocks && npx prettier --write --cache"
		],
		"wordpress/wp-content/plugins/my-project-custom-blocks/src/**/*.{css,scss}": [
			"cd wordpress/wp-content/plugins/my-project-custom-blocks && npx stylelint --fix --cache",
			"cd wordpress/wp-content/plugins/my-project-custom-blocks && npx prettier --write --cache"
		],
		"wordpress/wp-content/themes/flat101-starter-theme/assets/src/**/*.{js,jsx,ts,tsx}": [
			"cd wordpress/wp-content/themes/flat101-starter-theme && npx eslint --fix --cache --max-warnings=0",
			"cd wordpress/wp-content/themes/flat101-starter-theme && npx prettier --write --cache"
		],
		"wordpress/wp-content/themes/flat101-starter-theme/assets/src/**/*.{css,scss}": [
			"cd wordpress/wp-content/themes/flat101-starter-theme && npx stylelint --fix --cache",
			"cd wordpress/wp-content/themes/flat101-starter-theme && npx prettier --write --cache"
		],
		"wordpress/wp-content/themes/my-project-theme/assets/src/**/*.{js,jsx,ts,tsx}": [
			"cd wordpress/wp-content/themes/my-project-theme && npx eslint --fix --cache --max-warnings=0",
			"cd wordpress/wp-content/themes/my-project-theme && npx prettier --write --cache"
		],
		"wordpress/wp-content/themes/my-project-theme/assets/src/**/*.{css,scss}": [
			"cd wordpress/wp-content/themes/my-project-theme && npx stylelint --fix --cache",
			"cd wordpress/wp-content/themes/my-project-theme && npx prettier --write --cache"
		],
		"wordpress/wp-content/{plugins/my-project-custom-blocks,themes/flat101-starter-theme,themes/my-project-theme}/**/*.php": [
			"bash -c 'for file in \"$@\"; do ./vendor/bin/phpcbf --standard=phpcs.xml.dist \"$file\" && ./vendor/bin/phpcs --standard=phpcs.xml.dist \"$file\"; done' --"
		],
		"*.{json,md,yml,yaml}": [
			"prettier --write --cache"
		]
	}
}
